name: MinIO Test

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        # platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: 拉取代码
        uses: actions/checkout@v2
      - name: 设置 Node 环境
        uses: actions/setup-node@v1
        with:
          node-version: 16
      # - name: 处理 Mac 环境
      #   if: matrix.platform == 'macos-latest'
      #   run: |
      #     brew install minio/stable/mc
      #     mc --help
      # - name: 处理 Linux 环境
      #   if: matrix.platform == 'ubuntu-latest'
      #   run: |
      #     yum install weget -y
      #     weget https://dl.min.io/client/mc/release/linux-amd64/mc
      #     chmod +x mc
      #     ./mc --help
      # - name: 处理 Windows 环境
      #   if: matrix.platform == 'windows-latest'
      #   run: |
      #     curl https://dl.min.io/client/mc/release/windows-amd64/mc.exe
      #     mc.exe --help
      - name: 运行js脚本
        run: |
          yarn
          node ./upload.js
        env:
          MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      # - name: 设置 OSS 信息
      #   run: |
      #     mc alias set deploy $MINIO_ENDPOINT $MINIO_ACCESS_KEY $MINIO_SECRET_KEY --api S3v4
      #   env:
      #     MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      # - name: 上传文件
      #   run: |
      #     mc mirror --overwrite $SOURCE_DIR "deploy/$BUCKET$TARGET_DIR"
      #   env:
      #     BUCKET: "app"
      #     SOURCE_DIR: "public/version.json"
      #     TARGET_DIR: "/iHost"
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      # - name: 上传 MacOS 文件
      #   if: matrix.platform == 'ubuntu-latest'
      #   run: |
      #     mc mirror --overwrite $SOURCE_DIR "deploy/$BUCKET$TARGET_DIR"
      #   env:
      #     BUCKET: "app"
      #     SOURCE_DIR: "public/linux.json"
      #     TARGET_DIR: "/iHost"
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      # - name: 上传 Windows 文件
      #   if: matrix.platform == 'windows-latest'
      #   run: |
      #     mc mirror --overwrite $SOURCE_DIR "deploy/$BUCKET$TARGET_DIR"
      #   env:
      #     BUCKET: "app"
      #     SOURCE_DIR: "public/windows.json"
      #     TARGET_DIR: "/iHost"
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
      # - name: 上传 MacOS 文件
      #   if: matrix.platform == 'macos-latest'
      #   run: |
      #     mc mirror --overwrite $SOURCE_DIR "deploy/$BUCKET$TARGET_DIR"
      #   env:
      #     BUCKET: "app"
      #     SOURCE_DIR: "public/mac.json"
      #     TARGET_DIR: "/iHost"
      #     MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
      #     MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
